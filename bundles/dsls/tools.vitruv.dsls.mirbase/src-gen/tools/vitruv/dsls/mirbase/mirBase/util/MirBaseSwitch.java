/**
 * generated by Xtext 2.10.0
 */
package tools.vitruv.dsls.mirbase.mirBase.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import tools.vitruv.dsls.mirbase.mirBase.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see tools.vitruv.dsls.mirbase.mirBase.MirBasePackage
 * @generated
 */
public class MirBaseSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MirBasePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MirBaseSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MirBasePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MirBasePackage.DUMMY_ENTRY_RULE:
      {
        DummyEntryRule dummyEntryRule = (DummyEntryRule)theEObject;
        T result = caseDummyEntryRule(dummyEntryRule);
        if (result == null) result = caseMirBaseFile(dummyEntryRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MirBasePackage.MIR_BASE_FILE:
      {
        MirBaseFile mirBaseFile = (MirBaseFile)theEObject;
        T result = caseMirBaseFile(mirBaseFile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MirBasePackage.METAMODEL_IMPORT:
      {
        MetamodelImport metamodelImport = (MetamodelImport)theEObject;
        T result = caseMetamodelImport(metamodelImport);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MirBasePackage.NAMED_JAVA_ELEMENT:
      {
        NamedJavaElement namedJavaElement = (NamedJavaElement)theEObject;
        T result = caseNamedJavaElement(namedJavaElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MirBasePackage.METACLASS_REFERENCE:
      {
        MetaclassReference metaclassReference = (MetaclassReference)theEObject;
        T result = caseMetaclassReference(metaclassReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MirBasePackage.NAMED_METACLASS_REFERENCE:
      {
        NamedMetaclassReference namedMetaclassReference = (NamedMetaclassReference)theEObject;
        T result = caseNamedMetaclassReference(namedMetaclassReference);
        if (result == null) result = caseMetaclassReference(namedMetaclassReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MirBasePackage.METACLASS_FEATURE_REFERENCE:
      {
        MetaclassFeatureReference metaclassFeatureReference = (MetaclassFeatureReference)theEObject;
        T result = caseMetaclassFeatureReference(metaclassFeatureReference);
        if (result == null) result = caseMetaclassReference(metaclassFeatureReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MirBasePackage.METAMODEL_REFERENCE:
      {
        MetamodelReference metamodelReference = (MetamodelReference)theEObject;
        T result = caseMetamodelReference(metamodelReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MirBasePackage.DOMAIN_REFERENCE:
      {
        DomainReference domainReference = (DomainReference)theEObject;
        T result = caseDomainReference(domainReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dummy Entry Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dummy Entry Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDummyEntryRule(DummyEntryRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>File</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>File</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMirBaseFile(MirBaseFile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodel Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodel Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodelImport(MetamodelImport object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Named Java Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Named Java Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNamedJavaElement(NamedJavaElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metaclass Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metaclass Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetaclassReference(MetaclassReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Named Metaclass Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Named Metaclass Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNamedMetaclassReference(NamedMetaclassReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metaclass Feature Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metaclass Feature Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetaclassFeatureReference(MetaclassFeatureReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Metamodel Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Metamodel Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetamodelReference(MetamodelReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Domain Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Domain Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDomainReference(DomainReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MirBaseSwitch
